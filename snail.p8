pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
function _init()
  world = {}
  for i=1,100 do
    local o = salt:new()
    o.x = rnd(1000)
    o.y = rnd(8)*16
    add(world, o)
  end
  
  for i=1,10 do
    local o = snail:new()
    add(world, o)
  end
end

function _update()
  local i = 1
  while i <= #world do
    local v = world[i]
    if v:update() == false then
      del(world, v)
    else
      i = i + 1
    end
  end
  pl:update()
  cam:update()
end

function _draw()
  road:draw()
  pl:draw()
  for i=1,#world do
    world[i]:draw()
  end
end
-->8
-- camera

cam = {x=0,y=0,w=64,h=64}
cam.ox, cam.oy = 0, 0

function cam.update()
  if cam.x+cam.w/2<pl.x then
    cam.x=pl.x - cam.w/2
  elseif cam.x-cam.w/2>pl.x then
    cam.x = pl.x + cam.w/2
  end
    
  if cam.y+cam.h/2<pl.y then
    cam.y=pl.y - cam.h/2
  elseif cam.y-cam.h/2>pl.y then
    cam.y = pl.y + cam.h/2
  end
  
  cam.ox = 64 - cam.x
  --cam.oy = 64 - cam.y
end
-->8
-- obj

obj = {}

function obj:new()
  local self = setmetatable({}, {__index=self})
  self.x = 0
  self.y = 0
  self.w = 8
  self.h = 8
  self.sprite = 0
  self.sprite_size = 1
  return self
end

function obj:update()
  if self:iscolliding(pl) then
    return false
  end
  return true
end

function obj:iscolliding(o)
  return self.x < o.x + o.w
     and self.x + self.w > o.x
     and self.y < o.y + o.h
     and self.y + self.h > o.y
end

function obj:draw()
  spr(self.sprite,self.x+cam.ox,self.y+cam.oy,self.sprite_size,self.sprite_size, self.flipx or false)
end
-->8
-- road

road = {}

function road.update()
end

function road.draw()
  local ox, oy = cam.ox%16, cam.oy%16
  for y=-1,8-1 do
    for x=-1,8-1 do
      spr(34,x*16+ox,y*16+oy,2,2)
    end
  end
end
-->8
-- salt

salt = obj:new()
function salt:new()
  local self = obj.new(self)
  self.sprite = 10
  self.w = 16
  self.h = 16
  self.sprite_size = 2
  self.ttl = 0
  return self
end

function salt:update()
  self.ttl = self.ttl + 1
  if self.ttl == 3 then 
    self.sprite = self.sprite + 2
    if self.sprite > 14 then
      self.sprite = 10
    end
    self.ttl = 0
  end
  return obj.update(self)
end
-->8
-- player

pl = obj:new()
pl.speed = 2
pl.sprite = 7
pl.sprite_size = 2
pl.width = 16
pl.height = 16

function pl:update()
  local dx,dy = 0,0
  if btn(0) then
    dx = dx - 1
  end
  if btn(1) then
    dx = dx + 1
  end
  if btn(2) then
    dy = dy - 1
  end
  if btn(3) then
    dy = dy + 1
  end
  
  if dx == -1 then
    self.flipx = true
  elseif dx == 1 then
    self.flipx = false
  end
  
  self.x = self.x + dx*self.speed
  self.y = self.y + dy*self.speed
  
  self.y = min(self.y, 128 - 8)
  self.y = max(self.y, 0)
end
-->8
-- snail
snail = obj:new()
function snail:new()
  local self = obj.new(self)
    self.x = cam.x + 64
    self.y = (flr(rnd(7))+1)*16
    self.speed = flr(rnd(3))+1
  return self
end

function snail:draw()
  circfill(self.x+cam.ox,self.y+cam.oy,4,50)
end

function snail:update()
  self.x = self.x - self.speed
  if self.x + cam.ox + 8 < 0
    or self.x + cam.ox > 128
  then
    add(world, snail:new())
    return false
  end
end
__gfx__
00000000000000000000000011199999999991119999999900888800000000000000000000000000000000000000000000000000000000000000555555550000
00000000000000000000000011199999999991119999999908888880000000000000000000000000000000000000000000000000000000000000565555650000
00700700000000000000000099999999999999999999999988188180000000000000000000000000000055555555000000005555555500000000555665550000
0007700000000000ccc0ccc099999999999999999999999988888880000000000ce00ce000000000000055555555000000005555555500000000555665550000
0007700000000000c1c0c1c09999999999999999999999998881188000eee0000cc00cc000000000000056566565000000005656656500000000055555500000
0070070000000000ccc0ccc0999999999999999999999999088888800efffee00c000c0000000000000055566555000000005556655500000000057777500000
00000000000999000cc0cc0099999999999999991119999908888880efeeefee0c000c0000000000000005555550000000000555555000000000577777750000
00000000009999900cc0cc0099999999999999991119999988000080efeeeefeecc00c0000000000000057777775000000005777777500000000575555750000
00000000099999999ccccc0000000000000000000000000000000000eefefeefeec0cc0000000000000577555577500000057755557750000005775777775000
00000000999999999ccccc00000000000000000000000000000000000eefeeeefec0c00000000000000577577777500000057757777750000005775555775000
00000009999999999ccccc00000000000000000000000000000000000eeeeeeeeeccc00000000000005777555577750000577755557775000057777775777500
00000009999999999ccccc0000000000000000000000000000000000ccccccccccccc00000000000005777777577750000577777757775000057775555777500
00000009999999999cccc000000000000000000000000000000000000cccccccccc0000000000000057777555577775005777755557777500577777777777750
0000000cccccccccccccc00000000000000000000000000000000000000000000000000000000000057777777777775005777777777777500577777777777750
0000000ccccccccccccc000000000000000000000000000000000000000000000000000000000000055777777777755000555555555555000055555555555500
00000000000000000000000000000000000000000000000000000000000000000000000000000000005555555555550000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333b33333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333b33b333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b33b33b333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33b3b3b3333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333b3bb3333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333bb333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333338888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000040504050405040504050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000141501151415141514150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000504050405040504050405020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000141514151415141514151415120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0405000004050405040504050405000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1415141514151415141514151415000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000190501905019050190501b0501e0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 01424344

